// Code generated by mockery v2.49.0. DO NOT EDIT.

package models

import mock "github.com/stretchr/testify/mock"

// MockUser is an autogenerated mock type for the User type
type MockUser struct {
	mock.Mock
}

type MockUser_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUser) EXPECT() *MockUser_Expecter {
	return &MockUser_Expecter{mock: &_m.Mock}
}

// GetSubjectID provides a mock function with given fields:
func (_m *MockUser) GetSubjectID() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetSubjectID")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockUser_GetSubjectID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSubjectID'
type MockUser_GetSubjectID_Call struct {
	*mock.Call
}

// GetSubjectID is a helper method to define mock.On call
func (_e *MockUser_Expecter) GetSubjectID() *MockUser_GetSubjectID_Call {
	return &MockUser_GetSubjectID_Call{Call: _e.mock.On("GetSubjectID")}
}

func (_c *MockUser_GetSubjectID_Call) Run(run func()) *MockUser_GetSubjectID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUser_GetSubjectID_Call) Return(_a0 string) *MockUser_GetSubjectID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockUser_GetSubjectID_Call) RunAndReturn(run func() string) *MockUser_GetSubjectID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockUser creates a new instance of MockUser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUser(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUser {
	mock := &MockUser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
