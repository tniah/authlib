// Code generated by mockery v2.49.0. DO NOT EDIT.

package ropc

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/tniah/authlib/models"

	requests "github.com/tniah/authlib/requests"
)

// MockTokenProcessor is an autogenerated mock type for the TokenProcessor type
type MockTokenProcessor struct {
	mock.Mock
}

type MockTokenProcessor_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTokenProcessor) EXPECT() *MockTokenProcessor_Expecter {
	return &MockTokenProcessor_Expecter{mock: &_m.Mock}
}

// ProcessToken provides a mock function with given fields: r, token, data
func (_m *MockTokenProcessor) ProcessToken(r *requests.TokenRequest, token models.Token, data map[string]interface{}) error {
	ret := _m.Called(r, token, data)

	if len(ret) == 0 {
		panic("no return value specified for ProcessToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*requests.TokenRequest, models.Token, map[string]interface{}) error); ok {
		r0 = rf(r, token, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockTokenProcessor_ProcessToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ProcessToken'
type MockTokenProcessor_ProcessToken_Call struct {
	*mock.Call
}

// ProcessToken is a helper method to define mock.On call
//   - r *requests.TokenRequest
//   - token models.Token
//   - data map[string]interface{}
func (_e *MockTokenProcessor_Expecter) ProcessToken(r interface{}, token interface{}, data interface{}) *MockTokenProcessor_ProcessToken_Call {
	return &MockTokenProcessor_ProcessToken_Call{Call: _e.mock.On("ProcessToken", r, token, data)}
}

func (_c *MockTokenProcessor_ProcessToken_Call) Run(run func(r *requests.TokenRequest, token models.Token, data map[string]interface{})) *MockTokenProcessor_ProcessToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*requests.TokenRequest), args[1].(models.Token), args[2].(map[string]interface{}))
	})
	return _c
}

func (_c *MockTokenProcessor_ProcessToken_Call) Return(_a0 error) *MockTokenProcessor_ProcessToken_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockTokenProcessor_ProcessToken_Call) RunAndReturn(run func(*requests.TokenRequest, models.Token, map[string]interface{}) error) *MockTokenProcessor_ProcessToken_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockTokenProcessor creates a new instance of MockTokenProcessor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTokenProcessor(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTokenProcessor {
	mock := &MockTokenProcessor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
